<Page
    x:Class="To_Do.Settings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:To_Do"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:ani="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="ImageTemplate" x:DataType="local:GridThemeItem">
            <Grid PointerEntered="Grid_PointerEntered" PointerExited="Grid_PointerExited" Width="150" Height="100">
                <Polygon Points="50,50 150,50 150,100, 50,100" Stroke="Transparent" Fill="{x:Bind darkThemeVariant.backgroundBrush}"/>
                <Polygon Points="50,0 150,0 150,15, 50,15" Stroke="Transparent" Fill="#eeeeee"/>
                <Border CornerRadius="{ThemeResource TopLeftNavViewContentCorner}" Margin="50,6,0,0" VerticalAlignment="Top" Width="150" Height="44" Background="{x:Bind backgroundBrush}"/>
                <Polygon Points="0,0 50,0 50,50, 0,50" Stroke="Transparent" Fill="#eeeeee"/>
                <Polygon Points="0,50 50,50 50,100, 0,100" Stroke="Transparent" Fill="#3c3c3c"/>
                <Polygon Fill="{x:Bind borderBrush}" Points="60,14 80,14 80,17 60,17"/>
                <Polygon Fill="#aadddddd" Points="60,30 140,30 140,40 60,40"/>
                <Polygon Fill="#44888888" Points="60,55 140,55 140,65 60,65"/>
                <Polygon Points="75,34 135,34 135,36 75,36" Fill="#000000"/>
                <Polygon Points="75,59 135,59 135,61 75,61" Fill="#ffffff"/>
                <Ellipse Margin="-7,29,10,10" Width="4" Height="4" Fill="{x:Bind darkThemeVariant.borderBrush}"/>
                <Polygon Points="0,91 50,91 50,97 0,97" Fill="#22cccccc"/>
                <Polygon Points="2,92 3,92 3,96 2,96" Fill="{x:Bind darkThemeVariant.borderBrush}"/>
                <Polygon Points="7,93 25,93 25,95 7,95" Fill="{x:Bind darkThemeVariant.borderBrush}"/>
                <Polygon Points="7,23 29,23 29,25 7,25" Fill="#000000"/>
                <Polygon Points="7,13 25,13 25,15 7,15" Fill="#000000"/>
                <Border Margin="-7,-20,10,10" Width="4" Height="4" BorderThickness="1" Background="Transparent" CornerRadius="4" BorderBrush="#000000"/>
                <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent" BorderBrush="{ThemeResource SystemBaseLowColor}" BorderThickness="1"/>
                <Grid x:Name="blur" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <media:UIElementExtensions.VisualFactory>
                        <media:PipelineVisualFactory>
                            <media:BlurEffect x:Name="ImageBlurEffect" IsAnimatable="True"/>
                        </media:PipelineVisualFactory>
                    </media:UIElementExtensions.VisualFactory>
                    <ani:Explicit.Animations>
                        <ani:AnimationSet x:Name="BlurAnimation">
                            <ani:BlurEffectAnimation
                                 To="10"
                                 Duration="0:0:0.2"
                                 EasingType="Quadratic"
                                 EasingMode="EaseOut"
                                 Target="{Binding ElementName=ImageBlurEffect}"/>
                        </ani:AnimationSet>
                        <ani:AnimationSet x:Name="UnBlurAnimation">
                            <ani:BlurEffectAnimation
                                 To="0"
                                 Duration="0:0:0.2"
                                 EasingType="Quadratic"
                                 EasingMode="EaseIn"
                                 Target="{Binding ElementName=ImageBlurEffect}"/>
                        </ani:AnimationSet>
                    </ani:Explicit.Animations>
                </Grid>
                <Grid>
                    <TextBlock Opacity="0" x:Name="tttext" Translation="0,30,0" FontSize="12" Style="{ThemeResource BaseTextBlockStyle}" Foreground="White" TextWrapping="Wrap" HorizontalAlignment="Left" Margin="12,6,12,12" VerticalAlignment="Bottom" Text="{x:Bind tooltip}">
                        <TextBlock.TranslationTransition>
                            <Vector3Transition Duration="0:0:0.2"/>
                        </TextBlock.TranslationTransition>
                        <TextBlock.OpacityTransition>
                            <ScalarTransition Duration="0:0:0.2"/>
                        </TextBlock.OpacityTransition>
                    </TextBlock>
                </Grid>
                <interactivity:Interaction.Behaviors>
                    
                    <interactions:EventTriggerBehavior EventName="PointerEntered">
                        <behaviors:StartAnimationAction Animation="{Binding ElementName=BlurAnimation}"/>
                    </interactions:EventTriggerBehavior>
                    <interactions:EventTriggerBehavior EventName="PointerExited">
                        <behaviors:StartAnimationAction Animation="{Binding ElementName=UnBlurAnimation}"/>
                    </interactions:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Grid>
        </DataTemplate>
        <Style x:Key="ExpanderStyle1" TargetType="muxc:Expander">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}"/>
            <Setter Property="Background" Value="{ThemeResource ExpanderContentBackground}"/>
            <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}"/>
            <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ExpanderContentDownBorderThickness}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ExpanderContentBorderBrush}"/>
            <Setter Property="Padding" Value="{StaticResource ExpanderContentPadding}"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="muxc:Expander">
                        <Grid MaxWidth="{TemplateBinding MaxWidth}" MinWidth="{TemplateBinding MinWidth}">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="Row0" Height="Auto"/>
                                <RowDefinition x:Name="Row1" Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ExpandStates">
                                    <VisualState x:Name="ExpandUp">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding TemplateSettings.ContentHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" KeySpline="0.0, 0.0, 0.0, 1.0" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CollapseDown">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.167" KeySpline="1.0, 1.0, 0.0, 1.0" Value="{Binding TemplateSettings.ContentHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ExpandDown">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding TemplateSettings.NegativeContentHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" KeySpline="0.0, 0.0, 0.0, 1.0" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CollapseUp">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.167" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.167" KeySpline="1.0, 1.0, 0.0, 1.0" Value="{Binding TemplateSettings.NegativeContentHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandDirectionStates">
                                    <VisualState x:Name="Down"/>
                                    <VisualState x:Name="Up">
                                        <VisualState.Setters>
                                            <Setter Target="ExpanderHeader.Style" Value="{StaticResource ExpanderHeaderUpStyle}"/>
                                            <Setter Target="ExpanderContent.BorderThickness" Value="{StaticResource ExpanderContentUpBorderThickness}"/>
                                            <Setter Target="ExpanderHeader.(Grid.Row)" Value="1"/>
                                            <Setter Target="ExpanderContentClip.(Grid.Row)" Value="0"/>
                                            <Setter Target="Row0.Height" Value="*"/>
                                            <Setter Target="Row1.Height" Value="Auto"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ExpanderHeader" AutomationProperties.AutomationId="ExpanderToggleButton" Background="{ThemeResource ExpanderHeaderBackground}" BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}" BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{TemplateBinding IsEnabled}" MinHeight="{TemplateBinding MinHeight}" Padding="{StaticResource ExpanderHeaderPadding}" Style="{StaticResource ExpanderHeaderDownStyle}" VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}"/>
                            <Border x:Name="ExpanderContentClip" Grid.Row="1">
                                <Border x:Name="ExpanderContent" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource ExpanderContentDownBorderThickness}" HorizontalAlignment="Stretch" MinHeight="{TemplateBinding MinHeight}" Padding="{TemplateBinding Padding}" VerticalAlignment="Stretch" Visibility="Collapsed">
                                    <Border.RenderTransform>
                                        <CompositeTransform/>
                                    </Border.RenderTransform>
                                    <ContentPresenter HorizontalAlignment="Stretch" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.BackgroundTransition>
            <BrushTransition/>
        </Grid.BackgroundTransition>
        <Border HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="34,33,18,41">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Padding="0,0,20,20" Spacing="10">

                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Foreground="{ThemeResource SystemAccentColorDark2}" FontSize="18" Text="Appearance"/>
                    <muxc:Expander Style="{StaticResource ExpanderStyle1}" HorizontalAlignment="Stretch" CornerRadius="{ThemeResource ControlCornerRadius}">
                        <muxc:Expander.Header>
                            <StackPanel Padding="0,11,0,0" Height="65" Spacing="6" Orientation="Vertical">
                                <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="App theme"/>
                                <TextBlock Foreground="{ThemeResource SystemBaseMediumColor}" FontSize="12" Text="Select which app theme to display"/>
                            </StackPanel>
                        </muxc:Expander.Header>
                        <muxc:Expander.Content>
                            <StackPanel x:Name="ThemePanel" HorizontalAlignment="Left">
                                <RadioButton Tag="Light" Checked="OnThemeRadioButtonChecked" Content="Light"/>
                                <RadioButton Tag="Dark" Checked="OnThemeRadioButtonChecked" Content="Dark" />
                                <RadioButton Tag="Default" Checked="OnThemeRadioButtonChecked" Content="Use system setting" />
                            </StackPanel>
                        </muxc:Expander.Content>
                    </muxc:Expander>
                    <muxc:Expander Style="{StaticResource ExpanderStyle1}" HorizontalAlignment="Stretch" CornerRadius="{ThemeResource ControlCornerRadius}">
                        <muxc:Expander.Header>
                            <StackPanel Padding="0,11,0,0" Height="65" Spacing="6" Orientation="Vertical">
                                <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="Color theme"/>
                                <TextBlock Foreground="{ThemeResource SystemBaseMediumColor}" FontSize="12" Text="Polish your app experience with beautiful color themes"/>
                            </StackPanel>
                        </muxc:Expander.Header>
                        <muxc:Expander.Content>
                            <GridView ItemClick="themeGrid_ItemClick" ItemsSource="{x:Bind gridItems}" ItemTemplate="{StaticResource ImageTemplate}" SelectionMode="None" IsItemClickEnabled="True" x:Name="themeGrid">
                                <GridView.ItemContainerStyle>
                                    <Style TargetType="GridViewItem">
                                        <Setter Property="Margin" Value="3, 3, 3, 3"/>
                                    </Style>
                                </GridView.ItemContainerStyle>

                                <GridView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsWrapGrid x:Name="MaxItemsWrapGrid"
                                   MaximumRowsOrColumns="7"
                                   Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </GridView.ItemsPanel>
                            </GridView>
                        </muxc:Expander.Content>
                    </muxc:Expander>
                    <Border CornerRadius="{ThemeResource ControlCornerRadius}" Background="{ThemeResource ExpanderHeaderBackground}" BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}" BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}" HorizontalAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="450"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Margin="17,0,10,0" Padding="0,11,0,0" Height="65" Spacing="6" Orientation="Vertical">
                                <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="Navigation transition style"/>
                                <TextBlock Foreground="{ThemeResource SystemBaseMediumColor}" FontSize="12" Text="Choose how transitions to different pages are shown"/>
                            </StackPanel>
                            <ComboBox VerticalAlignment="Center" Margin="10,0,54,0" HorizontalAlignment="Right" Grid.Column="1" SelectionChanged="navStyleCombo_SelectionChanged" x:Name="navStyleCombo">
                                <ComboBoxItem Content="Entrance"/>
                                <ComboBoxItem Content="Drill"/>
                                <ComboBoxItem Content="Suppress"/>
                                <ComboBoxItem Content="Slide from left"/>
                                <ComboBoxItem Content="Slide from right"/>
                            </ComboBox>
                        </Grid>
                    </Border>
                    <Border CornerRadius="{ThemeResource ControlCornerRadius}" Background="{ThemeResource ExpanderHeaderBackground}" BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}" BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}" HorizontalAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="450"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Margin="17,0,10,0" Padding="0,11,0,0" Height="65" Spacing="6" Orientation="Vertical">
                                <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="Rounded corners for controls"/>
                                <TextBlock Foreground="{ThemeResource SystemBaseMediumColor}" FontSize="12" Text="Let controls use rounded corners introduced in WinUI 2.6 (app restart needed)"/>
                            </StackPanel>
                            <ToggleSwitch VerticalAlignment="Center" Margin="10,0,-30,0" HorizontalAlignment="Right" Grid.Column="1" x:Name="RoundCornerToggle" Toggled="OnRoundedCornerToggled"/>
                        </Grid>
                    </Border>

                    <muxc:Expander Style="{StaticResource ExpanderStyle1}" HorizontalAlignment="Stretch" CornerRadius="{ThemeResource ControlCornerRadius}">
                        <muxc:Expander.Header>
                            <StackPanel Padding="0,11,0,0" Height="65" Spacing="6" Orientation="Vertical">
                                <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="Background image"/>
                                <TextBlock Foreground="{ThemeResource SystemBaseMediumColor}" FontSize="12" Text="Choose whether to show an image as wallpaper"/>
                            </StackPanel>
                        </muxc:Expander.Header>
                        <muxc:Expander.Content>
                            <StackPanel HorizontalAlignment="Left">
                                <ToggleSwitch x:Name="btntoggle" Toggled="OnBGIMGToggled" Header="Use image as background (some images have bad contrast with some colors)"/>
                                <StackPanel Visibility="Collapsed" x:Name="Fallbackpanel" Spacing="10">
                                    <TextBlock Text="*Allow access to file system to use custom images." Foreground="{ThemeResource SystemErrorTextColor}"/>
                                    <Button Click="LaunchSettings">
                                        <Button.Content>
                                            <StackPanel Spacing="10" Orientation="Horizontal">
                                                <FontIcon Glyph="&#xE8A7;"/>
                                                <TextBlock Text="Launch Settings"/>
                                            </StackPanel>
                                        </Button.Content>
                                    </Button>
                                </StackPanel>
                                <Button Margin="0,10,0,0" x:Name="bgimgbutton" Click="Chooseimg" Content="Choose Image"/>
                            </StackPanel>
                        </muxc:Expander.Content>
                    </muxc:Expander>
                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Foreground="{ThemeResource SystemAccentColorDark2}" Margin="0,20,0,0" FontSize="18" Text="Miscellaneous"/>
                    <Border CornerRadius="{ThemeResource ControlCornerRadius}" Background="{ThemeResource ExpanderHeaderBackground}" BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}" BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}" HorizontalAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="450"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Margin="17,0,10,0" Padding="0,11,0,0" Height="65" Spacing="6" Orientation="Vertical">
                                <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="About this app"/>
                                <TextBlock Foreground="{ThemeResource SystemBaseMediumColor}" FontSize="12" Loaded="TextBlock_Loaded"/>
                            </StackPanel>
                            <HyperlinkButton VerticalAlignment="Center" Margin="10,0,54,0" Grid.Column="1" HorizontalAlignment="Right" NavigateUri="https://github.com/BigFloppa404/To-Do_App">
                                <HyperlinkButton.Content>
                                    <TextBlock Foreground="{ThemeResource SystemAccentColor}" Text="GitHub page"/>
                                </HyperlinkButton.Content>
                            </HyperlinkButton>
                        </Grid>
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </Border>
        <TextBlock Margin="35,-45,35,10" VerticalAlignment="Top" HorizontalAlignment="Left" Style="{ThemeResource TitleTextBlockStyle}" Text="Settings" Foreground="{ThemeResource SystemAccentColorDark2}" />
    </Grid>
</Page>
