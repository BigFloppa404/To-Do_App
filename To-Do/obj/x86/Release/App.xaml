<Application
    x:Class="To_Do.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:To_Do">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                <ResourceDictionary>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Dark">
                    <Style x:Key="ButtonStyle1" TargetType="Button">
                        <Setter Property="Background" Value="{ThemeResource ButtonBackground}"/>
                        <Setter Property="BackgroundSizing" Value="OuterBorderEdge"/>
                        <Setter Property="CornerRadius" Value="4"/>
                        <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}"/>
                        <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
                        <Setter Property="Padding" Value="{StaticResource ButtonPadding}"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                        <Setter Property="FocusVisualMargin" Value="-3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BackgroundSizing="{TemplateBinding BackgroundSizing}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </ContentPresenter>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--<AcrylicBrush x:Key="NavigationViewDefaultPaneBackground" FallbackColor="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=FallbackColor}" TintTransitionDuration="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=TintTransitionDuration}" TintLuminosityOpacity="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=TintLuminosityOpacity}" TintColor="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=TintColor}" TintOpacity="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=TintOpacity}" BackgroundSource="Backdrop" Opacity="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=Opacity}"/>-->
                    <Color x:Key="SystemAccentColorLight1">#5395f5</Color>
                    <Color x:Key="SystemAccentColorLight2">#5395f5</Color>
                    <Color x:Key="SystemAccentColor">#5395f5</Color>
                    <SolidColorBrush x:Key="NavigationViewContentBackground" Color="#1c4785"/>
                    <SolidColorBrush x:Key="NavigationViewItemForegroundSelected" Color="{ThemeResource SystemAccentColorLight2}"/>
                    <SolidColorBrush x:Key="NavigationViewItemForegroundSelectedPointerOver" Color="{ThemeResource SystemAccentColorLight2}"/>
                    <SolidColorBrush x:Key="NavigationViewItemForegroundSelectedPressed" Color="{ThemeResource SystemAccentColorLight2}"/>
                    <Style BasedOn="{StaticResource ListViewItemRevealStyle}" x:Key="RoundedListViewItem" TargetType="ListViewItem">
                        <Setter Property="CornerRadius" Value="4"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckMode="{ThemeResource ListViewItemCheckMode}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DragForeground="{ThemeResource ListViewItemDragForeground}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}" RevealBackground="{ThemeResource ListViewItemRevealBackground}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}" SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Selected">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOverSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOverPressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PressedSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="DisabledStates">
                                                <VisualState x:Name="Enabled"/>
                                                <VisualState x:Name="Disabled">

                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </ListViewItemPresenter>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>

                <ResourceDictionary x:Key="Light">
                    <Style x:Key="ButtonStyle1" TargetType="Button">
                        <Setter Property="Background" Value="{ThemeResource ButtonBackground}"/>
                        <Setter Property="BackgroundSizing" Value="OuterBorderEdge"/>
                        <Setter Property="CornerRadius" Value="4"/>
                        <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}"/>
                        <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
                        <Setter Property="Padding" Value="{StaticResource ButtonPadding}"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                        <Setter Property="FocusVisualMargin" Value="-3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BackgroundSizing="{TemplateBinding BackgroundSizing}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </ContentPresenter>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--<AcrylicBrush x:Key="NavigationViewDefaultPaneBackground" FallbackColor="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=FallbackColor}" TintTransitionDuration="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=TintTransitionDuration}" TintLuminosityOpacity="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=TintLuminosityOpacity}" TintColor="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=TintColor}" TintOpacity="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=TintOpacity}" BackgroundSource="Backdrop" Opacity="{Binding Source={ThemeResource SystemControlAcrylicWindowBrush}, Path=Opacity}"/>-->
                    <Color x:Key="SystemAccentColorDark1">#1e54c9</Color>
                    <Color x:Key="SystemAccentColorDark2">#1e54c9</Color>
                    <Color x:Key="SystemAccentColor">#1e54c9</Color>
                    <SolidColorBrush x:Key="NavigationViewContentBackground" Color="#8db8ff"/>
                    <SolidColorBrush x:Key="NavigationViewItemForegroundSelected" Color="{ThemeResource SystemAccentColorDark1}"/>
                    <SolidColorBrush x:Key="NavigationViewItemForegroundSelectedPointerOver" Color="{ThemeResource SystemAccentColorDark1}"/>
                    <SolidColorBrush x:Key="NavigationViewItemForegroundSelectedPressed" Color="{ThemeResource SystemAccentColorDark1}"/>
                    <Style BasedOn="{StaticResource ListViewItemRevealStyle}" x:Key="RoundedListViewItem" TargetType="ListViewItem">
                        <Setter Property="CornerRadius" Value="4"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckMode="{ThemeResource ListViewItemCheckMode}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DragForeground="{ThemeResource ListViewItemDragForeground}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}" RevealBackground="{ThemeResource ListViewItemRevealBackground}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}" SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Selected">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOverSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOverPressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PressedSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="DisabledStates">
                                                <VisualState x:Name="Enabled"/>
                                                <VisualState x:Name="Disabled">

                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </ListViewItemPresenter>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>

                <ResourceDictionary x:Key="HighContrast">
                    <Style BasedOn="{StaticResource ListViewItemRevealStyle}" x:Key="RoundedListViewItem" TargetType="ListViewItem">
                        <Setter Property="CornerRadius" Value="4"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckMode="{ThemeResource ListViewItemCheckMode}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DragForeground="{ThemeResource ListViewItemDragForeground}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}" RevealBackground="{ThemeResource ListViewItemRevealBackground}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}" SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Selected">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOverSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PointerOverPressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="PressedSelected">
                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                                        <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="DisabledStates">
                                                <VisualState x:Name="Enabled"/>
                                                <VisualState x:Name="Disabled">

                                                    <VisualState.Setters>
                                                        <Setter Target="Root.CornerRadius" Value="4" />
                                                        <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </ListViewItemPresenter>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>

