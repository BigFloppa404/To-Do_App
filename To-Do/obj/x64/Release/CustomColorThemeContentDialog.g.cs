#pragma checksum "E:\VS Projects\To-Do_App\To-Do\CustomColorThemeContentDialog.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "0512FA8A2A0AB37B40070A7B22CF324EB439113012F7976E925746C0C855768C"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace To_Do
{
    partial class CustomColorThemeContentDialog : 
        global::Windows.UI.Xaml.Controls.ContentDialog, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_FrameworkElement_RequestedTheme(global::Windows.UI.Xaml.FrameworkElement obj, global::Windows.UI.Xaml.ElementTheme value)
            {
                obj.RequestedTheme = value;
            }
            public static void Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(global::Windows.UI.Xaml.Media.SolidColorBrush obj, global::Windows.UI.Color value)
            {
                obj.Color = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CustomColorThemeContentDialog_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICustomColorThemeContentDialog_Bindings
        {
            private global::To_Do.CustomColorThemeContentDialog dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::System.WeakReference obj1;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj5;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj9;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj13;
            private global::Windows.UI.Xaml.Media.SolidColorBrush obj17;

            private CustomColorThemeContentDialog_obj1_BindingsTracking bindingsTracking;

            public CustomColorThemeContentDialog_obj1_Bindings()
            {
                this.bindingsTracking = new CustomColorThemeContentDialog_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 1: // CustomColorThemeContentDialog.xaml line 1
                        this.obj1 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.ContentDialog)target);
                        break;
                    case 5: // CustomColorThemeContentDialog.xaml line 148
                        this.obj5 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        break;
                    case 9: // CustomColorThemeContentDialog.xaml line 109
                        this.obj9 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        break;
                    case 13: // CustomColorThemeContentDialog.xaml line 71
                        this.obj13 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        break;
                    case 17: // CustomColorThemeContentDialog.xaml line 33
                        this.obj17 = (global::Windows.UI.Xaml.Media.SolidColorBrush)target;
                        break;
                    default:
                        break;
                }
            }

            // ICustomColorThemeContentDialog_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::To_Do.CustomColorThemeContentDialog)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::To_Do.CustomColorThemeContentDialog obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_THEME(obj.THEME, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_darkaccentColorPicker(obj.darkaccentColorPicker, phase);
                        this.Update_darkBGColorPicker(obj.darkBGColorPicker, phase);
                        this.Update_lightaccentColorPicker(obj.lightaccentColorPicker, phase);
                        this.Update_lightBGColorPicker(obj.lightBGColorPicker, phase);
                    }
                }
            }
            private void Update_THEME(global::Windows.UI.Xaml.ElementTheme obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // CustomColorThemeContentDialog.xaml line 1
                    if ((this.obj1.Target as global::Windows.UI.Xaml.Controls.ContentDialog) != null)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_RequestedTheme((this.obj1.Target as global::Windows.UI.Xaml.Controls.ContentDialog), obj);
                    }
                }
            }
            private void Update_darkaccentColorPicker(global::Microsoft.UI.Xaml.Controls.ColorPicker obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_darkaccentColorPicker(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_darkaccentColorPicker_Color(obj.Color, phase);
                    }
                }
            }
            private void Update_darkaccentColorPicker_Color(global::Windows.UI.Color obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // CustomColorThemeContentDialog.xaml line 148
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj5, obj);
                }
            }
            private void Update_darkBGColorPicker(global::Microsoft.UI.Xaml.Controls.ColorPicker obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_darkBGColorPicker(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_darkBGColorPicker_Color(obj.Color, phase);
                    }
                }
            }
            private void Update_darkBGColorPicker_Color(global::Windows.UI.Color obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // CustomColorThemeContentDialog.xaml line 109
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj9, obj);
                }
            }
            private void Update_lightaccentColorPicker(global::Microsoft.UI.Xaml.Controls.ColorPicker obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_lightaccentColorPicker(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_lightaccentColorPicker_Color(obj.Color, phase);
                    }
                }
            }
            private void Update_lightaccentColorPicker_Color(global::Windows.UI.Color obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // CustomColorThemeContentDialog.xaml line 71
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj13, obj);
                }
            }
            private void Update_lightBGColorPicker(global::Microsoft.UI.Xaml.Controls.ColorPicker obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_lightBGColorPicker(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_lightBGColorPicker_Color(obj.Color, phase);
                    }
                }
            }
            private void Update_lightBGColorPicker_Color(global::Windows.UI.Color obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // CustomColorThemeContentDialog.xaml line 33
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_SolidColorBrush_Color(this.obj17, obj);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class CustomColorThemeContentDialog_obj1_BindingsTracking
            {
                private global::System.WeakReference<CustomColorThemeContentDialog_obj1_Bindings> weakRefToBindingObj; 

                public CustomColorThemeContentDialog_obj1_BindingsTracking(CustomColorThemeContentDialog_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<CustomColorThemeContentDialog_obj1_Bindings>(obj);
                }

                public CustomColorThemeContentDialog_obj1_Bindings TryGetBindingObject()
                {
                    CustomColorThemeContentDialog_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_darkaccentColorPicker(null);
                    UpdateChildListeners_darkBGColorPicker(null);
                    UpdateChildListeners_lightaccentColorPicker(null);
                    UpdateChildListeners_lightBGColorPicker(null);
                }

                public void DependencyPropertyChanged_darkaccentColorPicker_Color(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CustomColorThemeContentDialog_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ColorPicker obj = sender as global::Microsoft.UI.Xaml.Controls.ColorPicker;
                        if (obj != null)
                        {
                            bindings.Update_darkaccentColorPicker_Color(obj.Color, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ColorPicker cache_darkaccentColorPicker = null;
                private long tokenDPC_darkaccentColorPicker_Color = 0;
                public void UpdateChildListeners_darkaccentColorPicker(global::Microsoft.UI.Xaml.Controls.ColorPicker obj)
                {
                    if (obj != cache_darkaccentColorPicker)
                    {
                        if (cache_darkaccentColorPicker != null)
                        {
                            cache_darkaccentColorPicker.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty, tokenDPC_darkaccentColorPicker_Color);
                            cache_darkaccentColorPicker = null;
                        }
                        if (obj != null)
                        {
                            cache_darkaccentColorPicker = obj;
                            tokenDPC_darkaccentColorPicker_Color = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty, DependencyPropertyChanged_darkaccentColorPicker_Color);
                        }
                    }
                }
                public void DependencyPropertyChanged_darkBGColorPicker_Color(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CustomColorThemeContentDialog_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ColorPicker obj = sender as global::Microsoft.UI.Xaml.Controls.ColorPicker;
                        if (obj != null)
                        {
                            bindings.Update_darkBGColorPicker_Color(obj.Color, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ColorPicker cache_darkBGColorPicker = null;
                private long tokenDPC_darkBGColorPicker_Color = 0;
                public void UpdateChildListeners_darkBGColorPicker(global::Microsoft.UI.Xaml.Controls.ColorPicker obj)
                {
                    if (obj != cache_darkBGColorPicker)
                    {
                        if (cache_darkBGColorPicker != null)
                        {
                            cache_darkBGColorPicker.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty, tokenDPC_darkBGColorPicker_Color);
                            cache_darkBGColorPicker = null;
                        }
                        if (obj != null)
                        {
                            cache_darkBGColorPicker = obj;
                            tokenDPC_darkBGColorPicker_Color = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty, DependencyPropertyChanged_darkBGColorPicker_Color);
                        }
                    }
                }
                public void DependencyPropertyChanged_lightaccentColorPicker_Color(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CustomColorThemeContentDialog_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ColorPicker obj = sender as global::Microsoft.UI.Xaml.Controls.ColorPicker;
                        if (obj != null)
                        {
                            bindings.Update_lightaccentColorPicker_Color(obj.Color, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ColorPicker cache_lightaccentColorPicker = null;
                private long tokenDPC_lightaccentColorPicker_Color = 0;
                public void UpdateChildListeners_lightaccentColorPicker(global::Microsoft.UI.Xaml.Controls.ColorPicker obj)
                {
                    if (obj != cache_lightaccentColorPicker)
                    {
                        if (cache_lightaccentColorPicker != null)
                        {
                            cache_lightaccentColorPicker.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty, tokenDPC_lightaccentColorPicker_Color);
                            cache_lightaccentColorPicker = null;
                        }
                        if (obj != null)
                        {
                            cache_lightaccentColorPicker = obj;
                            tokenDPC_lightaccentColorPicker_Color = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty, DependencyPropertyChanged_lightaccentColorPicker_Color);
                        }
                    }
                }
                public void DependencyPropertyChanged_lightBGColorPicker_Color(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CustomColorThemeContentDialog_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Microsoft.UI.Xaml.Controls.ColorPicker obj = sender as global::Microsoft.UI.Xaml.Controls.ColorPicker;
                        if (obj != null)
                        {
                            bindings.Update_lightBGColorPicker_Color(obj.Color, DATA_CHANGED);
                        }
                    }
                }
                private global::Microsoft.UI.Xaml.Controls.ColorPicker cache_lightBGColorPicker = null;
                private long tokenDPC_lightBGColorPicker_Color = 0;
                public void UpdateChildListeners_lightBGColorPicker(global::Microsoft.UI.Xaml.Controls.ColorPicker obj)
                {
                    if (obj != cache_lightBGColorPicker)
                    {
                        if (cache_lightBGColorPicker != null)
                        {
                            cache_lightBGColorPicker.UnregisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty, tokenDPC_lightBGColorPicker_Color);
                            cache_lightBGColorPicker = null;
                        }
                        if (obj != null)
                        {
                            cache_lightBGColorPicker = obj;
                            tokenDPC_lightBGColorPicker_Color = obj.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.ColorPicker.ColorProperty, DependencyPropertyChanged_lightBGColorPicker_Color);
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // CustomColorThemeContentDialog.xaml line 1
                {
                    global::Windows.UI.Xaml.Controls.ContentDialog element1 = (global::Windows.UI.Xaml.Controls.ContentDialog)(target);
                    ((global::Windows.UI.Xaml.Controls.ContentDialog)element1).Loaded += this.ContentDialog_Loaded;
                    ((global::Windows.UI.Xaml.Controls.ContentDialog)element1).PrimaryButtonClick += this.ContentDialog_PrimaryButtonClick;
                }
                break;
            case 2: // CustomColorThemeContentDialog.xaml line 159
                {
                    this.darkthemeaccentflyout = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                }
                break;
            case 3: // CustomColorThemeContentDialog.xaml line 167
                {
                    this.darkaccentColorPicker = (global::Microsoft.UI.Xaml.Controls.ColorPicker)(target);
                }
                break;
            case 4: // CustomColorThemeContentDialog.xaml line 168
                {
                    global::Windows.UI.Xaml.Controls.Button element4 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element4).Click += this.CloseDarkThemeAccentFlyout;
                }
                break;
            case 6: // CustomColorThemeContentDialog.xaml line 120
                {
                    this.darkthemebgflyout = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                }
                break;
            case 7: // CustomColorThemeContentDialog.xaml line 128
                {
                    this.darkBGColorPicker = (global::Microsoft.UI.Xaml.Controls.ColorPicker)(target);
                }
                break;
            case 8: // CustomColorThemeContentDialog.xaml line 129
                {
                    global::Windows.UI.Xaml.Controls.Button element8 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element8).Click += this.CloseDarkThemeBGFlyout;
                }
                break;
            case 10: // CustomColorThemeContentDialog.xaml line 82
                {
                    this.lightthemeaccentflyout = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                }
                break;
            case 11: // CustomColorThemeContentDialog.xaml line 90
                {
                    this.lightaccentColorPicker = (global::Microsoft.UI.Xaml.Controls.ColorPicker)(target);
                }
                break;
            case 12: // CustomColorThemeContentDialog.xaml line 91
                {
                    global::Windows.UI.Xaml.Controls.Button element12 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element12).Click += this.CloseLightThemeAccentFlyout;
                }
                break;
            case 14: // CustomColorThemeContentDialog.xaml line 44
                {
                    this.lightthemebgflyout = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                }
                break;
            case 15: // CustomColorThemeContentDialog.xaml line 52
                {
                    this.lightBGColorPicker = (global::Microsoft.UI.Xaml.Controls.ColorPicker)(target);
                }
                break;
            case 16: // CustomColorThemeContentDialog.xaml line 53
                {
                    global::Windows.UI.Xaml.Controls.Button element16 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element16).Click += this.CloseLightThemeBGFlyout;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 0.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // CustomColorThemeContentDialog.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.ContentDialog element1 = (global::Windows.UI.Xaml.Controls.ContentDialog)target;
                    CustomColorThemeContentDialog_obj1_Bindings bindings = new CustomColorThemeContentDialog_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

